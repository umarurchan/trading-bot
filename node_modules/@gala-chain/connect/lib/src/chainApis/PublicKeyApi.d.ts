import { UserProfile } from "@gala-chain/api";
import { GalaChainProvider } from "../GalaChainClient";
import { RegisterEthUserRequest, RegisterUserRequest, UpdatePublicKeyRequest } from "../types";
import { GalaChainBaseApi } from "./GalaChainBaseApi";
/**
 * API client for public key and user profile operations on the GalaChain network.
 * Handles user registration, profile management, and public key updates.
 */
export declare class PublicKeyApi extends GalaChainBaseApi {
    /**
     * Creates a new PublicKeyApi instance.
     * @param chainCodeUrl - The URL of the public key chaincode service
     * @param connection - The GalaChain provider for network communication
     */
    constructor(chainCodeUrl: string, connection: GalaChainProvider);
    /**
     * Retrieves the current user's profile information.
     * @param message - Optional message for authentication
     * @param signature - Optional signature for the message
     * @returns Promise resolving to the user's profile
     */
    GetMyProfile(message?: string, signature?: string): Promise<import("../types").GalaChainResponseSuccess<UserProfile>>;
    /**
     * Registers a new user on the GalaChain network.
     * @param dto - The user registration request data
     * @returns Promise resolving to registration confirmation
     */
    RegisterUser(dto: RegisterUserRequest): Promise<import("../types").GalaChainResponseSuccess<string>>;
    /**
     * Registers a new Ethereum user on the GalaChain network.
     * @param dto - The Ethereum user registration request data
     * @returns Promise resolving to registration confirmation
     */
    RegisterEthUser(dto: RegisterEthUserRequest): Promise<import("../types").GalaChainResponseSuccess<string>>;
    /**
     * Updates the public key for the current user.
     * @param dto - The public key update request data
     * @returns Promise resolving when the update is complete
     */
    UpdatePublicKey(dto: UpdatePublicKeyRequest): Promise<import("../types").GalaChainResponseSuccess<void>>;
}
//# sourceMappingURL=PublicKeyApi.d.ts.map