import { BatchMintTokenDto, BurnTokensDto, CreateTokenClassDto, DeleteAllowancesDto, FetchAllowancesDto, FetchAllowancesResponse, FetchBalancesDto, FetchBalancesWithPaginationDto, FetchBalancesWithTokenMetadataResponse, FetchBurnsDto, FetchMintRequestsDto, FetchTokenClassesDto, FetchTokenClassesResponse, FetchTokenClassesWithPaginationDto, FulfillMintDto, FullAllowanceCheckDto, FullAllowanceCheckResDto as FullAllowanceCheckResponse, GrantAllowanceDto, HighThroughputMintTokenDto, FulfillMintDto as HighThroughputMintTokenResponse, LockTokenDto, LockTokensDto, MintRequestDto, MintTokenDto, MintTokenWithAllowanceDto, RefreshAllowanceDto, ReleaseTokenDto, TokenAllowance, TokenBalance as TokenBalanceDto, TokenBalanceWithMetadata, TokenBurn, TokenClass, TokenClassKey, TokenHold, TokenInstanceKey, TransferTokenDto, UnlockTokenDto, UnlockTokensDto, UpdateTokenClassDto, UseTokenDto, UserAlias } from "@gala-chain/api";
import BigNumber from "bignumber.js";
import { ConstructorArgs } from "./utils";
type BatchMintTokenRequest = ConstructorArgs<BatchMintTokenDto>;
type BurnTokensRequest = ConstructorArgs<BurnTokensDto>;
type CreateTokenClassRequest = ConstructorArgs<CreateTokenClassDto>;
type DeleteAllowancesRequest = ConstructorArgs<DeleteAllowancesDto>;
type FetchAllowancesRequest = ConstructorArgs<FetchAllowancesDto>;
type FetchBalancesRequest = ConstructorArgs<FetchBalancesDto>;
type FetchBalancesWithPaginationRequest = ConstructorArgs<FetchBalancesWithPaginationDto>;
type FetchBurnsRequest = ConstructorArgs<FetchBurnsDto>;
type FetchMintRequestsRequest = ConstructorArgs<FetchMintRequestsDto>;
type FetchTokenClassesRequest = ConstructorArgs<FetchTokenClassesDto>;
type FetchTokenClassesWithPaginationRequest = ConstructorArgs<FetchTokenClassesWithPaginationDto>;
type FulfillMintRequest = ConstructorArgs<FulfillMintDto>;
type FullAllowanceCheckRequest = ConstructorArgs<FullAllowanceCheckDto>;
type GrantAllowanceRequest = ConstructorArgs<GrantAllowanceDto>;
type HighThroughputMintTokenRequest = ConstructorArgs<HighThroughputMintTokenDto>;
type LockTokenRequest = ConstructorArgs<LockTokenDto>;
type LockTokensRequest = ConstructorArgs<LockTokensDto>;
type MintRequest = ConstructorArgs<MintRequestDto>;
type MintTokenRequest = ConstructorArgs<MintTokenDto>;
type MintTokenWithAllowanceRequest = ConstructorArgs<MintTokenWithAllowanceDto>;
type RefreshAllowanceRequest = ConstructorArgs<RefreshAllowanceDto>;
type ReleaseTokenRequest = ConstructorArgs<ReleaseTokenDto>;
type TransferTokenRequest = ConstructorArgs<TransferTokenDto>;
type UnlockTokenRequest = ConstructorArgs<UnlockTokenDto>;
type UnlockTokensRequest = ConstructorArgs<UnlockTokensDto>;
type UpdateTokenClassRequest = ConstructorArgs<UpdateTokenClassDto>;
type UseTokenRequest = ConstructorArgs<UseTokenDto>;
/**
 * Token balance representation with validation decorators.
 * Unique case where we need to expose private properties but keep validations.
 */
declare class TokenBalance implements ConstructorArgs<TokenBalanceDto> {
    owner: UserAlias;
    collection: string;
    category: string;
    type: string;
    additionalKey: string;
    instanceIds?: Array<BigNumber>;
    lockedHolds?: Array<TokenHold>;
    inUseHolds?: Array<TokenHold>;
    quantity: BigNumber;
}
export { BatchMintTokenRequest, BurnTokensRequest, CreateTokenClassRequest, DeleteAllowancesRequest, FetchAllowancesRequest, FetchAllowancesResponse, FetchBalancesRequest, FetchBalancesWithPaginationRequest, FetchBalancesWithTokenMetadataResponse, FetchBurnsRequest, FetchMintRequestsRequest, FetchTokenClassesRequest, FetchTokenClassesResponse, FetchTokenClassesWithPaginationRequest, FulfillMintRequest, FullAllowanceCheckRequest, FullAllowanceCheckResponse, GrantAllowanceRequest, HighThroughputMintTokenRequest, HighThroughputMintTokenResponse, LockTokenRequest, LockTokensRequest, MintRequest, MintTokenRequest, MintTokenWithAllowanceRequest, RefreshAllowanceRequest, ReleaseTokenRequest, TokenAllowance, TokenBalance, TokenBalanceWithMetadata, TokenBurn, TokenClass, TokenClassKey, TokenHold, TokenInstanceKey, TransferTokenRequest, UnlockTokenRequest, UnlockTokensRequest, UpdateTokenClassRequest, UseTokenRequest };
//# sourceMappingURL=tokenApi.d.ts.map