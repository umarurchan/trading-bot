/**
 * Type definition for EIP-712 type structures.
 */
type EIP712Types = Record<string, Array<{
    name: string;
    type: string;
}>>;
/**
 * Type definition for EIP-712 value structures.
 */
type EIP712Value = Record<string, unknown>;
/**
 * Generates EIP-712 type definitions from a given object structure.
 * @template T - The type of the object to generate types for
 * @param typeName - The name of the primary type
 * @param params - The object to analyze for type generation
 * @returns EIP-712 compatible type definitions
 */
export declare function generateEIP712Types<T>(typeName: string, params: T): EIP712Types;
/**
 * Capitalizes the first letter of a string.
 * @param string - The string to capitalize
 * @returns The string with the first letter capitalized
 */
export declare function capitalizeFirstLetter(string: string): string;
/**
 * Generates EIP-712 value structures from a given object.
 * @template T - The type of the object to generate values for
 * @param params - The object to convert to EIP-712 format
 * @returns EIP-712 compatible value structure
 */
export declare function generateEIP712Value<T>(params: T): EIP712Value;
/**
 * Converts a GalaChain address to an Ethereum address format.
 * @param galaAddress - The GalaChain address to convert
 * @returns The equivalent Ethereum address
 */
export declare function galaChainToEthereumAddress(galaAddress: string): string;
/**
 * Converts an Ethereum address to a GalaChain address format.
 * @param ethereumAddress - The Ethereum address to convert
 * @returns The equivalent GalaChain address
 */
export declare function ethereumToGalaChainAddress(ethereumAddress: string): string;
export {};
//# sourceMappingURL=CommonUtils.d.ts.map