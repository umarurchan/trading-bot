import { BatchDto, ChainCallDTO, ContractAPI, DryRunResultDto, GalaChainResponse } from "../../types";
import { ChainClient } from "../generic";
export interface CommonContractAPI extends Record<string, unknown> {
    GetContractVersion(): Promise<GalaChainResponse<string>>;
    GetContractAPI(): Promise<GalaChainResponse<ContractAPI>>;
    GetObjectByKey(key: string): Promise<GalaChainResponse<Record<string, unknown>>>;
    GetObjectHistory(key: string): Promise<GalaChainResponse<Record<string, unknown>>>;
    DryRun(method: string, callerPublicKey: string, dto: ChainCallDTO): Promise<GalaChainResponse<DryRunResultDto>>;
    BatchSubmit(batch: BatchDto): Promise<GalaChainResponse<GalaChainResponse<unknown>[]>>;
    BatchEvaluate(batch: BatchDto): Promise<GalaChainResponse<GalaChainResponse<unknown>[]>>;
}
export declare const commonContractAPI: (client: ChainClient) => CommonContractAPI;
//# sourceMappingURL=CommonContractAPI.d.ts.map