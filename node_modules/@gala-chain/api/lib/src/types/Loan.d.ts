import BigNumber from "bignumber.js";
import { ChainObject } from "./ChainObject";
import { TokenInstanceKey, TokenInstanceQuantity, TokenInstanceQueryKey } from "./TokenInstance";
export declare enum LoanStatus {
    Any = 0,
    Open = 1,
    Contracted = 2,
    Fulfilled = 3,
    Cancelled = 4
}
export declare enum LoanClosedBy {
    Unspecified = 0,
    Owner = 1,
    Registrar = 2
}
export declare class LoanOffer extends ChainObject {
    collection: string;
    category: string;
    type: string;
    additionalKey: string;
    instance: BigNumber;
    owner: string;
    created: number;
    id: number;
    registrar?: string;
    borrower?: string;
    status: LoanStatus;
    reward?: Array<TokenInstanceQuantity>;
    uses: BigNumber;
    usesSpent: BigNumber;
    expires: number;
    static INDEX_KEY: string;
    tokenKey(): string;
    verifyTokenKey(key: TokenInstanceKey): boolean;
    Lender(): Lender;
}
export declare class Lender extends ChainObject {
    id: string;
    status: LoanStatus;
    offer: string;
    collection: string;
    category: string;
    type: string;
    additionalKey: string;
    instance: BigNumber;
    static INDEX_KEY: string;
    matchesQuery(key: TokenInstanceQueryKey): boolean;
}
export declare class LoanAgreement extends ChainObject {
    owner: string;
    offer: string;
    loan: string;
    borrower: string;
    created: number;
    static INDEX_KEY: string;
    static OBJECT_TYPE: string;
}
export declare class Loan extends ChainObject {
    registrar: string;
    collection: string;
    category: string;
    type: string;
    additionalKey: string;
    instance: BigNumber;
    start: number;
    end: number;
    owner: string;
    borrower: string;
    status: LoanStatus;
    closedBy: LoanClosedBy;
    static INDEX_KEY: string;
    static NULL_REGISTRAR_KEY: string;
}
//# sourceMappingURL=Loan.d.ts.map