import BigNumber from "bignumber.js";
import { GrantAllowanceQuantity } from "./GrantAllowance";
import { TokenAllowance } from "./TokenAllowance";
import { TokenInstanceKey, TokenInstanceQueryKey } from "./TokenInstance";
import { UserRef } from "./UserRef";
import { AllowanceKey, AllowanceType, MintRequestDto } from "./common";
import { ChainCallDTO, SubmitCallDTO } from "./dtos";
export declare class FetchAllowancesDto extends ChainCallDTO {
    static readonly MAX_LIMIT: number;
    static readonly DEFAULT_LIMIT = 1000;
    grantedTo: UserRef;
    collection?: string;
    category?: string;
    type?: string;
    additionalKey?: string;
    instance?: string;
    allowanceType?: AllowanceType;
    grantedBy?: UserRef;
    bookmark?: string;
    limit?: number;
}
export declare class FetchAllowancesLegacyDto extends ChainCallDTO {
    grantedTo: UserRef;
    collection?: string;
    category?: string;
    type?: string;
    additionalKey?: string;
    instance?: string;
    allowanceType?: AllowanceType;
    grantedBy?: UserRef;
    bookmark?: string;
}
export declare class FetchAllowancesResponse extends ChainCallDTO {
    results: TokenAllowance[];
    nextPageBookmark?: string;
}
export declare class DeleteAllowancesDto extends SubmitCallDTO {
    grantedTo: UserRef;
    grantedBy?: UserRef;
    collection?: string;
    category?: string;
    type?: string;
    additionalKey?: string;
    instance?: string;
    allowanceType?: AllowanceType;
}
export declare class GrantAllowanceDto extends SubmitCallDTO {
    static DEFAULT_EXPIRES: number;
    tokenInstance: TokenInstanceQueryKey;
    quantities: Array<GrantAllowanceQuantity>;
    allowanceType: AllowanceType;
    uses: BigNumber;
    expires?: number;
}
/**
 * Experimental: Defines allowances to be created. High-throughput implementation.
 *
 * @experimental 2023-03-23
 */
export declare class HighThroughputGrantAllowanceDto extends SubmitCallDTO {
    static DEFAULT_EXPIRES: number;
    tokenInstance: TokenInstanceQueryKey;
    quantities: Array<GrantAllowanceQuantity>;
    allowanceType: AllowanceType;
    uses: BigNumber;
    expires?: number;
}
export declare class FulfillMintAllowanceDto extends SubmitCallDTO {
    static MAX_ARR_SIZE: number;
    requests: MintRequestDto[];
}
export declare class FullAllowanceCheckDto extends ChainCallDTO {
    owner?: UserRef;
    grantedTo?: UserRef;
    collection?: string;
    category?: string;
    type?: string;
    additionalKey?: string;
    allowanceType?: AllowanceType;
}
export declare class FullAllowanceCheckResDto extends ChainCallDTO {
    all: boolean;
    missing?: Array<TokenInstanceKey>;
}
export declare class RefreshAllowanceDto extends ChainCallDTO {
    allowanceKey: AllowanceKey;
    uses: BigNumber;
    expires: number;
}
export declare class RefreshAllowancesDto extends SubmitCallDTO {
    allowances: Array<RefreshAllowanceDto>;
}
//# sourceMappingURL=allowance.d.ts.map